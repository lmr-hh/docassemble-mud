---
modules:
  - docassemble.msgraph
  - docassemble.mailgun
---
code: |
  msgraph = MSGraphSession()
  msgraph.fetch_token()
---
code: |
  mailgun = Mailgun()
  mailgun.template = daten["Mailgun Vorlage"]
---
code: |
  def da_error(value, code=412):
      from docassemble.base.error import DAError
      raise DAError(value, code=code)
---
code: |
  _file = msgraph.get_file_info(
    daten["Anmeldungen"]["Bibliothek"],
    daten["Anmeldungen"]["Dokument"]
  ).json()
  _error = _file.get("error", None)
  if _error:
    if _error["code"] == "invalidRequest":
      da_error(
        "Konfigurationsfehler: Die Tabellen-ID oder Dokumentenbibliothek-ID ist"
        " ungültig."
      )
    if _error["code"] == "itemNotFound":
      da_error(
        "Konfigurationsfehler: Die Excel-Datei für die Anmeldungen wurde nicht "
        "gefunden. Möglicherweise wurde sie gelöscht oder umbenannt?"
      )
    if _error["code"] == "accessDenied":
      da_error(
        "Konfigurationsfehler: Das Anmeldesystem hat keinen Zugriff auf die "
        "Anmeldetabelle. Der Account muss explizit über die Graph API Zugriff "
        "auf die Dokumentenbibliothek erhalten."
      )
    da_error(
      "Konfigurationsfehler: Auf die Anmeldetabelle kann nicht zugegriffen "
      f"werden. Die Fehlermeldung lautet: {_error['message']}"
    )
  _table = msgraph.get_table(
    daten["Anmeldungen"]["Bibliothek"],
    daten["Anmeldungen"]["Dokument"],
    daten["Anmeldungen"]["Tabelle"]
  ).json()
  _error = _table.get("error", None)
  if _error:
    if _error["code"] == "ItemNotFound":
      da_error(
        "Konfigurationsfehler: Die Datei für die Anmeldungen wurde gefunden, "
        "allerdings nicht die Tabelle innerhalb der Datei. Vermutlich ist die "
        "Tabellen-ID falsch."
      )
    da_error(
      "Es gibt einen Fehler mit der Tabelle in der Datei. Die Fehlermeldung "
      f"lautet: {_error['message']}"
    )
  tabelle = {
    "datei": _file,
    "tabelle": _table
  }
---
code: |
  ordner = msgraph.get_file_info(
    daten["Anmeldungen"]["Bibliothek"],
    daten["Anmeldungen"]["Ordner"]
  ).json()
  _error = ordner.get("error", None)
  if _error:
    if _error["code"] == "invalidRequest":
      da_error(
        "Konfigurationsfehler: Die angegebene ID für den Archivordner hat nicht"
        " das richtige Format. Momentan kann die Ordner-ID nur über die "
        "Microsoft Graph API herausgefunden werden."
      )
    if _error["code"] == "itemNotFound":
      da_error(
        "Konfigurationsfehler: Der Archivordner wurde nicht gefunden. "
        "Möglicherweise wurde der Ordner gelöscht oder befindet sich außerhalb "
        "des Zugriffsbereiches vom Anmeldesystem."
      )
    if _error["code"] == "accessDenied":
      da_error(
        "Konfigurationsfehler:  Das Anmeldesystem hat keinen Zufriff auf den "
        "Archivordner. Der Account muss explizit Zugriffsrechte für die "
        "Dokumentenbibliothek über die Microsoft Graph API erteilt bekommen.",
      )
    da_error(
      "Konfigurationsfehler: Es ist ein Fehler beim Zufriff auf den "
      f"Archivordner aufgetreten. Die Fehlermeldung ist {_error['message']}",
    )
---
code: |
  need(tabelle, ordner)
  Konfiguration = True